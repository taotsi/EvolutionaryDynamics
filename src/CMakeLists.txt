add_library(lib_evolutionary_dynamics world.cc)
target_include_directories(lib_evolutionary_dynamics PUBLIC ${include_dir})
target_include_directories(lib_evolutionary_dynamics PUBLIC ${extern_include_dir})

if(MSVC)
  set_target_properties(lib_evolutionary_dynamics PROPERTIES ARCHIVE_OUTPUT_DIRECTORY  ${PROJECT_BINARY_DIR})
  set_target_properties(lib_evolutionary_dynamics PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR})
  set_target_properties(lib_evolutionary_dynamics PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR})
else()
  set_target_properties(lib_evolutionary_dynamics PROPERTIES ARCHIVE_OUTPUT_DIRECTORY  ${PROJECT_BINARY_DIR})
endif(MSVC)

add_executable(evolutionary_dynamics main.cc)
target_link_libraries(evolutionary_dynamics PRIVATE lib_evolutionary_dynamics)
target_include_directories(evolutionary_dynamics PUBLIC ${include_dir})
target_include_directories(evolutionary_dynamics PUBLIC ${extern_include_dir})

if(MSVC)
  set_target_properties(evolutionary_dynamics PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
  set_target_properties(evolutionary_dynamics PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR})
  set_target_properties(evolutionary_dynamics PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR})
else()
  set_target_properties(evolutionary_dynamics PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
endif(MSVC)
