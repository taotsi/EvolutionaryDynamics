add_library(lib_imgui imgui.cpp imgui_draw.cpp imgui_widgets.cpp imgui_demo.cpp imgui-SFML.cpp)

target_include_directories(lib_imgui PUBLIC ${sfml_include_dir})
target_include_directories(lib_imgui PUBLIC ${imgui_include_dir})

message(${PROJECT_BINARY_DIR})

if(MSVC)
  add_definitions(-DSFML_STATIC)
  target_link_libraries(lib_imgui winmm.lib)
  target_link_libraries(lib_imgui opengl32.lib)
  target_link_libraries(lib_imgui gdi32.lib)
  target_link_libraries(lib_imgui ws2_32.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/ogg.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/vorbis.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/vorbisenc.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/vorbisfile.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/flac.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/freetype.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/sfml-system-s.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/sfml-network-s.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/sfml-window-s.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/sfml-audio-s.lib)
  target_link_libraries(lib_imgui ${sfml_lib_dir}/sfml-graphics-s.lib)
else() # linux
  find_package(SFML 2.5 COMPONENTS system window graphics network audio)
  target_link_libraries(lib_imgui sfml-system sfml-window sfml-graphics sfml-network sfml-audio)
endif(MSVC)

if(MSVC)
  set_target_properties(lib_imgui PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
  set_target_properties(lib_imgui PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR})
  set_target_properties(lib_imgui PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR})
else()
  set_target_properties(lib_imgui PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
endif(MSVC)
